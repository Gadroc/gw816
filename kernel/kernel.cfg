MEMORY {
    ZP:             start = $000000, size = $0100, file = "";
    STACK:          start = $00B000, size = $0100, file = "", define = YES;
    DIRECT:         start = $00B100, size = $0200, file = "", define = YES;
    KERNEL_DATA:    start = $00B300, size = $0C00, file = "";
    IO:             start = $00BF00, size = $0100, file = "";
    KERNEL_HIGH:    start = $00C000, size = $3FE0, fill = yes;
    VECTORS:        start = $00FFE0, size = $0020, fill = yes;
    ROM:            start = $010000, size = $C000, fill = yes;
}

SEGMENTS {
    ZEROPAGE:   load = ZP, type = zp;
    CODE:       load = KERNEL_HIGH, run = KERNEL_HIGH, type = ro;
    BSS:        load = KERNEL_DATA, type = bss, define = yes;
    RODATA:     load = KERNEL_HIGH, type = ro;
    VECTORS:    load = VECTORS, type = ro;
    DATA:       load = ROM, run = KERNEL_DATA, type = rw, define = YES;
    CHARSETS:   load = ROM, type = ro;
}
